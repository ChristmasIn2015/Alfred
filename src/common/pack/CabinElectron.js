var $=Object.defineProperty;var f=u=>$(u,"__esModule",{value:!0});var S=(u,i)=>{for(var e in i)$(u,e,{get:i[e],enumerable:!0})};f(exports);S(exports,{default:()=>d});var b=class{constructor(i){this.DBAddress="";this.DBOrigin=null;this.DBAddress=i}start(){return new Promise((i,e)=>{let t=require("sqlite3").verbose();this.DBOrigin=new t.Database(this.DBAddress,s=>s?e(s):i(!0))})}getTableCaller(i){return Promise.resolve(this.DBOrigin)}},E=b;var m=class{constructor(i){this.TableName=null;this.TableStruct=null;this.TableCaller=null;this.TableCaller=i}async init(i,e){this.TableName=i,this.TableStruct=Object.assign({},e);for(let t in this.TableStruct)this.TableStruct[t]=null;return new Promise((t,s)=>{let l="id INTEGER PRIMARY KEY AUTOINCREMENT, ";for(let a in e)e[a]==="number"&&(l+=`${a} INT, `),e[a]==="string"&&(l+=`${a} VARCHAR, `);l+="timeCreate INT, ",l+="timeUpdate INT, ",l=l.substring(0,l.length-2);let n=`CREATE TABLE IF NOT EXISTS ${i} (${l});`;this.TableCaller.run(n,async a=>{if(a){s(new Error(`${a.message}, SQL: ${n}`));return}let o=await this.getOldStruct();for(let r in e)r!=="id"&&r!=="timeCreate"&&r!=="timeUpdate"&&(o[r]||await this._createColumn(r,e[r]));for(let r in o)r!=="id"&&r!=="timeCreate"&&r!=="timeUpdate"&&(e[r]||await this._deleteColumn(r));t(!0)})})}create(i){i=this.model2TableStruct(i);let e="",t="";for(let s in i)e+=`'${s}',`,t+=`'${i[s]}',`;return e+="timeCreate,",t+=`'${Date.now()}',`,e+="timeUpdate,",t+=`'${Date.now()}',`,e=e.substring(0,e.length-1),t=t.substring(0,t.length-1),new Promise((s,l)=>{let n=`INSERT INTO ${this.TableName} (${e}) VALUES (${t});`;this.TableCaller.run(n,function(a){a?l(new Error(`${a.message}, SQL: ${n}`)):s(this)})})}get(i){let e="";for(let t in i)e+=`${t}='${i[t]}', `;return e=e.substring(0,e.length-2),new Promise((t,s)=>{let l=`SELECT * FROM ${this.TableName} WHERE ${e}`;this.TableCaller.get(l,function(n,a){n&&(n=new Error(`${n.message}, SQL: ${l}`)),n?s(n):t(a||null)})})}query(i){let e="";for(let t in i)e+=`${t}='${i[t]}', `;return e=e.substring(0,e.length-2),new Promise((t,s)=>{let l=`SELECT * FROM ${this.TableName}`;i&&Object.keys(i).length&&(l+=` WHERE ${e}`),this.TableCaller.all(l,function(n,a){n&&(n=new Error(`${n.message}, SQL: ${l}`)),n?s(n):t(a)})})}update(i,e){let t=this.getStruct();for(let n in e)n==="id"||n==="timeCreate"||n==="timeUpdate"||t[n]===void 0&&delete e[n];e=Object.assign(e,{timeUpdate:Date.now()});let s="";for(let n in e)s+=`${n}='${e[n]}', `;s=s.substring(0,s.length-2);let l="";for(let n in i)l+=`${n}='${i[n]}', `;return l=l.substring(0,l.length-2),new Promise((n,a)=>{let o=`UPDATE ${this.TableName} SET ${s} WHERE ${l}`;this.TableCaller.run(o,function(r){r&&(r=new Error(`${r.message}, SQL: ${o}`)),r?a(r):n(this)})})}delete(i){return new Promise((e,t)=>{let s=`DELETE FROM ${this.TableName} WHERE id = '${i}';`;this.TableCaller.run(s,function(l){l&&(l=new Error(`${l.message}, SQL: ${s}`)),l?t(l):e(this)})})}getOldStruct(){return new Promise((i,e)=>{let t={},s=`SELECT * FROM SQLITE_MASTER WHERE TYPE='table' AND NAME='${this.TableName}';`;this.TableCaller.get(s,function(l,n){if(l){e(new Error(`${l.message}, SQL: ${s}`));return}let a=n?n.sql:null;if(a){a=a.replace(/\n/g,""),a=a.substring(a.indexOf("(")+1,a.length-1).split(",");for(let o in a){let r=a[o].trim().split(" ")[0];t[r]=!0}}i(t)})})}getStruct(){return Object.assign({},this.TableStruct)}model2TableStruct(i){let e=this.getStruct();for(let t in e)i[t]&&(e[t]=i[t]);return e}_createColumn(i,e){return e==="number"&&(e="INT"),e==="string"&&(e="VARCHAR"),new Promise((t,s)=>{let l=`ALTER TABLE ${this.TableName} ADD COLUMN ${i} ${e}`;this.TableCaller.run(l,function(n){n?s(new Error(`${n.message}, SQL: ${l}`)):t(this)})})}async _deleteColumn(i){let e=await this.getOldStruct(),t="";for(let s in e)s!==i&&(t+=`${s}, `);return t=t.substring(0,t.length-2),new Promise((s,l)=>{let n=`CREATE TABLE IF NOT EXISTS ${this.TableName}_TEMP AS SELECT ${t} FROM ${this.TableName} WHERE 1 = 1;`;this.TableCaller.run(n,a=>{if(a){l(new Error(`${a.message}, SQL: ${n}`));return}let o=`DROP TABLE IF EXISTS ${this.TableName};`;this.TableCaller.run(o,r=>{if(r){l(new Error(`${r.message}, SQL: ${o}`));return}let T=`ALTER TABLE ${this.TableName}_TEMP RENAME TO ${this.TableName};`;this.TableCaller.run(T,function(g){g?l(new Error(`${g.message}, SQL: ${T}`)):s(!0)})})})})}},h=m;var c=class{constructor(){this.BinderMap=new Map;this.cabinDB=null;this.cabinHandler=null}async dbLink(i){this.cabinDB=new E(i),await this.cabinDB.start()}async dbTabler(i){if(global.$db||(global.$db={}),!this.cabinDB)throw new Error("\u6570\u636E\u5E93\u670D\u52A1\u4E0D\u5B58\u5728");for(let e in i){let t=i[e].name,s=await this.cabinDB.getTableCaller(t);global.$db[t]=new h(s),await global.$db[t].init(t,i[e].struct)}}electronRoute(i,e){global.$electron.ipcMain.handle(i,(...t)=>e(...t))}electronAliveRoute(i,e){global.$electron.ipcMain.on(i,(...t)=>e(...t))}},d=c;
